/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hp.View.JIF;

import com.hp.Dao.GoodsIMPL;
import com.hp.Dao.IGoods;
import com.hp.Dao.ISaleBill;
import com.hp.Dao.SaleBillIMPL;
import com.hp.Po.Goods;
import com.hp.Po.SaleBill;
import com.hp.Po.Supplier;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fan
 */
public class SellOutLibrary extends javax.swing.JInternalFrame {
     IGoods ig = new GoodsIMPL();
     ISaleBill isb = new SaleBillIMPL();
    
     
    /**
     * Creates new form SellOutLibrary
     */
    public SellOutLibrary() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSearch = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSell = new javax.swing.JTable();
        btnSell = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("销售出库");

        btnSearch.setText("查询");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "商品编号", "商品名称", "商品类型", "商品库存"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSearchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSearch);

        jLabel1.setText("加入销售：");

        tblSell.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "商品编号", "商品名称", "库存", "销售数量", "销售价格", "客户"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSell);

        btnSell.setText("销售出库");
        btnSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellActionPerformed(evt);
            }
        });

        btncancel.setText("删除");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btnSearch)
                .addGap(196, 196, 196))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(btnSell)
                        .addGap(112, 112, 112)
                        .addComponent(btncancel)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSell)
                    .addComponent(btncancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String str = this.txtSearch.getText();//获取输入框的数据
        System.out.print(str);
        List<Goods> list =ig.getGoods(str);
        DefaultTableModel dtm =(DefaultTableModel) this.tblSearch.getModel();
        while(dtm.getRowCount() > 0){
            dtm.removeRow(0);
        
        }
        for(Goods p :list){
            Vector v = new Vector();
            //v.add(p.getId());
            v.add(p.getDefineId());
            v.add(p.getGoodsName());
            v.add(p.getGoodsType());
            v.add(p.getPresentNumber());
           // v.add(p.getOwnerId());
            dtm.addRow(v);
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSearchMouseClicked
        // TODO add your handling code here:
        //获取表中的每一行 然后将数据填写到下方的文本框中
       int selectRow =  this.tblSearch.getSelectedRow();//获取行
       String id= this.tblSearch.getValueAt(selectRow, 0).toString();
       String name=this.tblSearch.getValueAt(selectRow,1).toString();
       
        DefaultTableModel dtm =(DefaultTableModel) this.tblSell.getModel();
        int all=this.tblSell.getRowCount();
       
       for(int i=0;i<all;i++)
       {
           if(id.equals(this.tblSell.getValueAt(i, 0))){JOptionPane.showMessageDialog(this,"商品已存在");
           return;}
       }
       Goods p=ig.findByGoods(id, name);
       if(p!=null){
            Vector v = new Vector();
            //v.add(p.getId());
            v.add(p.getDefineId());
            v.add(p.getGoodsName());
            //v.add(p.getGoodsType());
            v.add(p.getPresentNumber());
             v.add("");
             v.add(p.getAdviceSalePrice());
            dtm.addRow(v);
       }
       else JOptionPane.showMessageDialog(this,"数据库错误");
    }//GEN-LAST:event_tblSearchMouseClicked

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        int selectRow =  this.tblSell.getSelectedRow();//获取行
        System.out.println("ses"+selectRow);
        DefaultTableModel dtm =(DefaultTableModel) this.tblSell.getModel();
        dtm.removeRow(selectRow);
    }//GEN-LAST:event_btncancelActionPerformed

    private void btnSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellActionPerformed
        // TODO add your handling code here:
   /*   int selectRow =  this.tblSell.getSelectedRow();//获取行
        DefaultTableModel dtm =(DefaultTableModel) this.tblSell.getModel();
        Goods p = new Goods(DefineId,GoodsName,GoodsType,PresentNumber);
        if(ig.findByGoods(p)){
            JOptionPane.showMessageDialog(this, "商品已存在");
            return;
        
        }
        int result = ig.btnSell(p);
         
          if(result != 0 ){
              JOptionPane.showMessageDialog(this, "添加成功");
            btnSearchActionPerformed( evt);

          }else{
              JOptionPane.showMessageDialog(this, "添加失败");
          }*/
        int totalRow = tblSell.getRowCount();
        int num=isb.countSaleNum();
        System.out.println("11111111jjjj");
        System.out.println(num);
        for(int i=0;i<totalRow;i++)
        {
            num++;
            String saleId =String.valueOf(num);
            Date dateTimeLW = new Date();
             System.out.println("ok");
            
         
            SaleBill sb = new SaleBill();
            //销售单号
            sb.setSaleId(saleId);
             System.out.println("ok1");
            String defineId= tblSell.getValueAt(i, 0).toString();
            //销售商品编号
            sb.setGoodsId(defineId);
            String goodsName = tblSell.getValueAt(i,1).toString();
            //销售商品名
            sb.setGoodsName(goodsName);
            String presentNumber = tblSell.getValueAt(i,2).toString();
            int presentNumberInt = Integer.valueOf(presentNumber);
            
             System.out.println("ok2");
          
            String saleNumber =tblSell.getValueAt(i,3).toString();
            int saleNumberInt = Integer.valueOf(saleNumber);
            
            int currentSaleNumber =presentNumberInt-saleNumberInt;
            if(currentSaleNumber<0)
            {
                JOptionPane.showMessageDialog(this, "库存不足");
                return;
            }
            String currentSaleString =String.valueOf(currentSaleNumber);
            //库存量
            sb.setCount(currentSaleString);
            //出库量
            sb.setSaleNumber(saleNumber);
            
            String saleSingle = tblSell.getValueAt(i,4).toString();
            int saleSingleInt = Integer.valueOf(saleSingle);
            int totalSalePrice = saleNumberInt*saleSingleInt;
            String salePrice = String.valueOf(totalSalePrice);
            //销售金额
            sb.setSalePrice(salePrice);
            
           
            String clientId = tblSell.getValueAt(i,5).toString();
          
            //客户编号 
            sb.setClientId(clientId);
            
            System.out.println(sb.getClientId());
            ;
            System.out.println("ooooo");
            //查询客户表
            String clientName =isb.querySupplier(sb);
              
            //客户名称
            sb.setClientName(clientName);
            //销售时间
            sb.setSaleTime(new java.sql.Date(dateTimeLW.getTime()));
            //查询供应商表
            String supplierId = isb.queryClientId(sb);
            //供应商编号
            isb.addDateTime(sb);
            sb.setSupplierId(supplierId);
            //查询供应商表
            String supplierSimpleName  =isb.queryClientSimpleName(sb);
            //供应商简称
            
            sb.setSimpleName(supplierSimpleName);
            System.out.println("ddddd="+sb.getSimpleName());
            System.out.println("hp");
              
            int flag=isb.addSaleBill(sb);
            
            if(flag!=0)
            {
                isb.LWDealGoods(sb);
               Date d=new Date();
               int id=ig.Thri_findByGoodsId(defineId, goodsName);
               if(id>=0)
                   ig.Thri_updateGoodsOId(new java.sql.Date(d.getTime()), id);
                 JOptionPane.showMessageDialog(this, "出库成功");
            }
            else 
            {
                JOptionPane.showMessageDialog(this, "客户不存在");
            }
            
        }
        
    }//GEN-LAST:event_btnSellActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSell;
    private javax.swing.JButton btncancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblSearch;
    private javax.swing.JTable tblSell;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
