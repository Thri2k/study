/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hp.View.JIF;

import com.hp.Dao.BuyBillIMPL;
import com.hp.Dao.IGoods;
import com.hp.Dao.GoodsIMPL;
import com.hp.Dao.IBuyBill;
import com.hp.Dao.ISupplier;
import com.hp.Dao.SupplierIMPL;
import com.hp.Po.Goods;
import com.hp.Po.BuyBill;
import com.hp.Po.Supplier;
import com.hp.Util.StringUtile;

import java.util.Date;

//import com.hp.Dao.StringUtile;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dr.Thri
 */
public class PurchaseInWarehouse extends javax.swing.JInternalFrame {
     private int customerId = 1;
    IGoods ipd = new GoodsIMPL();
    ISupplier is = new SupplierIMPL();
    IBuyBill ib = new BuyBillIMPL();
    /**
     * Creates new form PurchaseInWarehouse
     */
    public PurchaseInWarehouse(int customerId) {
        initComponents();
        this.customerId = customerId;
  
    }
    public PurchaseInWarehouse() {
        initComponents();
       
  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblGoods = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBill = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("采购入库");

        tblGoods.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "商品编号", "商品名称", "商品型号", "商品库存", "建议购买价"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGoods.getTableHeader().setReorderingAllowed(false);
        tblGoods.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGoodsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGoods);
        if (tblGoods.getColumnModel().getColumnCount() > 0) {
            tblGoods.getColumnModel().getColumn(0).setResizable(false);
            tblGoods.getColumnModel().getColumn(1).setResizable(false);
            tblGoods.getColumnModel().getColumn(2).setResizable(false);
            tblGoods.getColumnModel().getColumn(3).setResizable(false);
            tblGoods.getColumnModel().getColumn(4).setResizable(false);
        }

        tblBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "商品编号", "商品名称", "商品型号", "建议购买价", "采购量", "采购价格", "供应商"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBill.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblBill);
        if (tblBill.getColumnModel().getColumnCount() > 0) {
            tblBill.getColumnModel().getColumn(0).setResizable(false);
            tblBill.getColumnModel().getColumn(1).setResizable(false);
            tblBill.getColumnModel().getColumn(2).setResizable(false);
            tblBill.getColumnModel().getColumn(3).setResizable(false);
            tblBill.getColumnModel().getColumn(4).setResizable(false);
            tblBill.getColumnModel().getColumn(5).setResizable(false);
            tblBill.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel1.setText("加入采购：");

        btnSearch.setText("查询");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd.setText("采购入库");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("删除");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                            .addComponent(jLabel1))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(50, 50, 50)
                .addComponent(btnDelete)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
         // TODO add your handling code here:
        /**
         * 1.获取输入框中的数据
         */
        String str = this.txtSearch.getText();//获取输入框的数据
        //2.调用dao层 将我们获取到的输入框的数据作为参数传给dao
        List<Goods> list =ipd.LGZ_getGoods(str);
        // 获取表格中的行进行删除
        DefaultTableModel dtm =(DefaultTableModel) this.tblGoods.getModel();
        while(dtm.getRowCount() > 0){
            System.out.println(dtm.getRowCount());
            dtm.removeRow(0);
        
        }
        for(Goods g :list){
            Vector v = new Vector();
            v.add(g.getDefineId());
            v.add(g.getGoodsName());
            v.add(g.getGoodsType());
            v.add(g.getPresentNumber());
            v.add(g.getAdviceBuyPrice());
                
                  System.out.println("Goods_Name="+g.getDefineId());
                   System.out.println("Goods_Type="+g.getGoodsName());
                    System.out.println("Present_Number="+g.getGoodsType());
                    System.out.println("Advice_Sale_Price="+g.getAdviceBuyPrice());
            dtm.addRow(v);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblGoodsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGoodsMouseClicked

        // TODO add your handling code here:
        //获取表中的每一行 然后将数据填写到下方的文本框中
        
       int selectRow =  this.tblGoods.getSelectedRow();//获取行
        System.out.println("ok1");
       String DefineId = this.tblGoods.getValueAt(selectRow, 0).toString().trim();
         System.out.println("selectRow="+selectRow);
    
       String GoodsName = this.tblGoods.getValueAt(selectRow, 1).toString().trim();
      
       String GoodsType = this.tblGoods.getValueAt(selectRow, 2).toString().trim();
        
       String AdviceBuyPrice = this.tblGoods.getValueAt(selectRow,4).toString().trim();
     
       Goods g=ipd.getGoods1(DefineId,GoodsName);
            //System.out.println(g.getOwnerId());
       Supplier s=is.LGZ_findId(String.valueOf(g.getOwnerId()));
       //String BuyNum = this.tblGoods.getValueAt(selectRow, 4).toString();
       //int BuyNums = Integer.parseInt(BuyNum);
       //String BuyPrice = this.tblGoods.getValueAt(selectRow, 5).toString();
       //int BuyPrices = Integer.parseInt(BuyPrice);

       DefaultTableModel dtm =(DefaultTableModel) this.tblBill.getModel();
        int all=tblBill.getRowCount();
                for(int i=0;i<all;i++)
                {
                    if(DefineId.equals(tblBill.getValueAt(i,0))){
                        JOptionPane.showMessageDialog(this,"商品已存在");
                        return ;
                    }
                }
       
       
        Vector v = new Vector();
        v.add(DefineId);
        v.add(GoodsName);
        v.add(GoodsType);
        v.add(AdviceBuyPrice);
        v.add(" ");
        v.add(AdviceBuyPrice);
        System.out.println(s.getSimpleName());
        v.add(s.getSimpleName());
        //v.add(BuyNums);
        dtm.addRow(v);
       
    }//GEN-LAST:event_tblGoodsMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm =(DefaultTableModel) this.tblBill.getModel();
        while(dtm.getRowCount() > 0){
            dtm.removeRow(0);
        
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int all=tblBill.getRowCount();
                for(int i=0;i<all;i++)
                {      
                    BuyBill b = new BuyBill();
                    b.setDefineId(this.tblBill.getValueAt(i,0).toString());
                    b.setBuyName(this.tblBill.getValueAt(i,1).toString());
                    b.setGoodsType(this.tblBill.getValueAt(i,2).toString());
                    b.setAdviceBuyPrice(this.tblBill.getValueAt(i,3).toString()); 
                    if(StringUtile.validateNull(this.tblBill.getValueAt(i,4).toString().trim())==false)
                    {
                        JOptionPane.showMessageDialog(this,"采购量不能为空");
                        return ;
                    }
                       if(StringUtile.validateDigit(this.tblBill.getValueAt(i,4).toString().trim())==false)
                    {
                        JOptionPane.showMessageDialog(this,"采购量只能为数字");
                        return ;
                    }
                    b.setBuyNum(this.tblBill.getValueAt(i,4).toString().trim());
                    b.setBuyPrice(this.tblBill.getValueAt(i,5).toString());
                    Supplier s=is.LGZ_findSimple(this.tblBill.getValueAt(i,6).toString());
                    b.setSupplier(String.valueOf(s.getId()));
                  
                    
                    Date date=new Date();
                    
                    b.setBuyTime(new java.sql.Date(date.getTime()));
                    b.setCustomerId(this.customerId);
                    System.out.println("ok");
                     
                      BuyBill bu=ib.LGZ_findId(b.getDefineId(),b.getBuyName());
                        System.out.println("ok");
                    if(bu==null)
                       {  
                          if( ib.addBill(b)<0){JOptionPane.showMessageDialog(this,"购买失败");return;}
                          else{  System.out.println("YUNX"); int id=ipd.Thri_findByGoodsId(b.getDefineId(),b.getBuyName());
                    if(id!=-1) ipd.Thri_updateGoodsId(new java.sql.Date(date.getTime()), id);   }
                       }
                    else { Date d=new Date(); int id=ipd.Thri_findByGoodsId(b.getDefineId(),b.getBuyName());
                     System.out.println("Define="+b.getDefineId()+"Buy_Namew="+b.getBuyName());
                    if(id!=-1) ipd.Thri_updateGoodsId(new java.sql.Date(date.getTime()), id);
                    System.out.println("ID="+id);
                    System.out.println("time="+ib.LGZ_Update(bu,Integer.parseInt(b.getBuyNum()),new java.sql.Date(d.getTime())));
                    }
                      
                }JOptionPane.showMessageDialog(this,"购买成功");
                          btnDeleteActionPerformed(evt);
                
    }//GEN-LAST:event_btnAddActionPerformed
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblBill;
    private javax.swing.JTable tblGoods;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
